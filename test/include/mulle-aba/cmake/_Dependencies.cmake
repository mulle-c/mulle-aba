# cmake/_Dependencies.cmake is generated by `mulle-sde`. Edits will be lost.
#
if( MULLE_TRACE_INCLUDE)
   MESSAGE( STATUS "# Include \"${CMAKE_CURRENT_LIST_FILE}\"" )
endif()

if( NOT MULLE_ALLOCATOR_LIBRARY)
   find_library( MULLE_ALLOCATOR_LIBRARY NAMES mulle-allocator)
   message( STATUS "MULLE_ALLOCATOR_LIBRARY is ${MULLE_ALLOCATOR_LIBRARY}")
   set( DEPENDENCY_LIBRARIES
      ${MULLE_ALLOCATOR_LIBRARY}
      ${DEPENDENCY_LIBRARIES}
      CACHE INTERNAL "need to cache this"
   )
   if( MULLE_ALLOCATOR_LIBRARY)
      # temporarily expand CMAKE_MODULE_PATH
      get_filename_component( _TMP_MULLE_ALLOCATOR_ROOT "${MULLE_ALLOCATOR_LIBRARY}" DIRECTORY)
      get_filename_component( _TMP_MULLE_ALLOCATOR_ROOT "${_TMP_MULLE_ALLOCATOR_ROOT}" DIRECTORY)
      set( MEMO_CMAKE_MODULE_PATH "${CMAKE_MODULE_PATH}")
      unset( MULLE_ALLOCATOR_DEFINITIONS)

      foreach( _TMP_MULLE_ALLOCATOR_NAME in mulle-allocator)
         set( CMAKE_MODULE_PATH "${MEMO_CMAKE_MODULE_PATH}")
         list( INSERT CMAKE_MODULE_PATH 0 "${_TMP_MULLE_ALLOCATOR_ROOT}/include/${_TMP_MULLE_ALLOCATOR_NAME}/cmake")
         # use explicit path to avoid "surprises"
         if( EXISTS "${_TMP_MULLE_ALLOCATOR_ROOT}/include/${_TMP_MULLE_ALLOCATOR_NAME}/cmake/DependenciesAndLibraries.cmake")
            include( "${_TMP_MULLE_ALLOCATOR_ROOT}/include/${_TMP_MULLE_ALLOCATOR_NAME}/cmake/DependenciesAndLibraries.cmake")
            set( INHERITED_DEFINITIONS
                    ${MULLE_ALLOCATOR_DEFINITIONS}
                    ${INHERITED_DEFINITIONS}
            )
            break()
         endif()
      endforeach()
      set( CMAKE_MODULE_PATH "${MEMO_CMAKE_MODULE_PATH}")
  endif()
endif()
